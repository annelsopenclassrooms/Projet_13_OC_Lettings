name: CI/CD Pipeline

# Trigger pipeline on push or pull_request
on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

jobs:
  # 1.Linting, tests, coverage
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          source venv/bin/activate
          flake8 .

      - name: Run tests with coverage
        run: |
          source venv/bin/activate
          pytest --cov=.

      - name: Check coverage threshold
        run: |
          source venv/bin/activate
          coverage report --fail-under=80

  # 2.Docker build and push (only if tests pass)
  docker-build:
    name: Docker Build & Push
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/oc-lettings-site:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/oc-lettings-site:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/oc-lettings-site:latest

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/oc-lettings-site:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/oc-lettings-site:latest

  # 3. Deployment (only if Docker build succeeds)
  deploy:
    name: Deploy to Production
    needs: docker-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull Docker image
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker pull ${{ secrets.DOCKER_USERNAME }}/oc-lettings-site:latest

      - name: Deploy to Render (example)
        run: |
          echo "Here you would add deployment commands for Render/AWS/Azure"
          echo "For Render, typically you link your Docker Hub repo and it auto-deploys on push to master."
